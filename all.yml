---
- hosts: [ubuntu-servers]
  become: yes
  vars:
    server_name: "{{ ansible_default_ipv4.address }}"
    document_root: /var/www
    app_root: html_demo_site-main
  tasks:
    - name: Update apt cache and install Nginx
      apt:
        name: nginx
        state: latest
        update_cache: yes

    - name: Copy website files to the server's document root
      copy:
        src: "{{ app_root }}"
        dest: "{{ document_root }}"
        mode: preserve

    - name: Apply Nginx template
      template:
        src: files/nginx.conf.j2
        dest: /etc/nginx/sites-available/default
      notify: Restart Nginx

    - name: Enable new site
      file:
        src: /etc/nginx/sites-available/default
        dest: /etc/nginx/sites-enabled/default
        state: link
      notify: Restart Nginx

    - name: Allow all access to tcp port 80
      ufw:
        rule: allow
        port: '80'
        proto: tcp

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

- name: Install Zabbix agent
  hosts: [ubuntu-servers]
  become: yes
  tasks:

    - name: Install zabbix release package
      apt:
        deb: https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb
      when: ansible_distribution == 'Ubuntu'

    - name: Install zabbix-agent package
      package:
        name: zabbix-agent
        state: present

    - name: Configure Zabbix agent
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^Server=127.0.0.1$", line: "Server=vm-zabbix.ru-central1.internal" }

    - name: Start Zabbix agent
      service:
        name: zabbix-agent
        state: restarted
        enabled: yes

- name: Install Zabbix
  hosts: [zabbix-servers]
  become: yes
  tasks:

    - name: Install zabbix release package
      apt:
        deb: https://repo.zabbix.com/zabbix/6.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.4-1+ubuntu22.04_all.deb
      when: ansible_distribution == 'Ubuntu'

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install zabbixpackage
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - zabbix-server-pgsql
        - zabbix-frontend-php
        - php8.1-pgsql
        - zabbix-nginx-conf
        - zabbix-sql-scripts
        - zabbix-agent

    - name: Import initial schema and data
      shell: "zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix"

    - name: Update Zabbix server configuration
      lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^# DBPassword=$", line: "DBPassword=zabbix" }

    - name: Update Zabbix server configuration nginx
      lineinfile:
        path: /etc/nginx/conf.d/zabbix.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: "^#        listen          8080;", line: "        listen          8080;" }
        - { regexp: "^#        server_name     example.com;", line: "        server_name     example.com;" }

    - name: reloaded Zabbix server and agent processes
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - zabbix-server
        - zabbix-agent
        - nginx
        - php8.1-fpm

- name: Install and configure Elasticsearch
  hosts: [elasticsearch-servers]
  become: yes

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Java
      apt:
        name: default-jre
        state: present

    - name: Install gnupg apt-transport-https
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - gnupg
        - apt-transport-https

    - name: Download Filebeat's apt key
      ansible.builtin.apt_key:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        state: present
      retries: 10
      delay: 10

    - name: Add Filebeat's repository
      ansible.builtin.apt_repository:
        repo: "deb https://mirror.yandex.ru/mirrors/elastic/8/ stable main"
        state: present
        update_cache: yes

    - name: Install Elasticsearch
      apt:
        name: elasticsearch
        state: present

    - name: Configure Elasticsearch
      template:
        src: files/elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml
      notify: restart elasticsearch

  handlers:
    - name: restart elasticsearch
      service:
        name: elasticsearch
        state: restarted

- name: Install and Configure Filebeat for Nginx logs
  hosts: [ubuntu-servers]
  become: yes

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Java
      apt:
        name: default-jre
        state: present

    - name: Download Filebeat's apt key
      ansible.builtin.apt_key:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        state: present
      retries: 10
      delay: 10

    - name: Add Filebeat's repository
      ansible.builtin.apt_repository:
        repo: "deb https://mirror.yandex.ru/mirrors/elastic/8/ stable main"
        state: present
        update_cache: yes

    - name: Install Filebeat
      ansible.builtin.apt:
        name: filebeat
        state: present

    - name: Set up Filebeat Nginx configuration
      ansible.builtin.template:
        src: files/filebeat-nginx.yml.j2
        dest: /etc/filebeat/modules.d/nginx.yml
      notify: restart filebeat

    - name: Set up Filebeat main configuration
      ansible.builtin.template:
        src: files/filebeat.yml.j2
        dest: /etc/filebeat/filebeat.yml
      notify: restart filebeat

    - name: Enable and start Filebeat service
      ansible.builtin.service:
        name: filebeat
        enabled: yes
        state: started

  handlers:
    - name: restart filebeat
      ansible.builtin.service:
        name: filebeat
        state: restarted

- name: Install and Configure Kibana
  hosts: [kibana-servers]
  become: yes

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Java
      apt:
        name: default-jre
        state: present

    - name: Download Kibana's apt key
      ansible.builtin.apt_key:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        state: present
      retries: 10
      delay: 10

    - name: Add Kibana's repository
      ansible.builtin.apt_repository:
        repo: "deb https://mirror.yandex.ru/mirrors/elastic/8/ stable main"
        state: present
        update_cache: yes

    - name: Install Kibana
      ansible.builtin.apt:
        name: kibana
        state: present

    - name: Configure Kibana to connect to Elasticsearch
      ansible.builtin.template:
        src: files/kibana.yml.j2
        dest: /etc/kibana/kibana.yml
      notify: restart kibana

    - name: Enable and start Kibana service
      ansible.builtin.service:
        name: kibana
        enabled: yes
        state: started

  handlers:
    - name: restart kibana
      ansible.builtin.service:
        name: kibana
        state: restarted
